{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rim1sta/Desktop/react-api-1/src/components/partner-screen-components/partner-screen-info.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { ApiServiceImpl } from \"../../api/api-service\";\nimport { isPartnerValid, partnerValidity } from \"../../api/domain/partner\";\nimport { PartnerScreen } from \"../partner-screen\";\nexport const PartnerScreenInfo = ({\n  id\n}) => {\n  _s();\n\n  const [dataPartner, setDataPartner] = useState();\n  useEffect(() => {\n    ApiServiceImpl.instance.getPartner(id).then(res => {\n      setDataPartner(res);\n    });\n  }, [id]);\n\n  const update = partner => {\n    const partnerValidition = partnerValidity(partner);\n\n    if (isPartnerValid(partnerValidition)) {\n      ApiServiceImpl.instance.updatePartner(partner).then(res => {\n        console.log(res);\n        window.location.href = \"/\";\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataPartner && /*#__PURE__*/_jsxDEV(PartnerScreen, {\n      partner: dataPartner,\n      partnerUpdate: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PartnerScreenInfo, \"UHfPF9t1Q/GzZGGlmSLtbfWo8Eo=\");\n\n_c = PartnerScreenInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnerScreenInfo\");","map":{"version":3,"sources":["/Users/rim1sta/Desktop/react-api-1/src/components/partner-screen-components/partner-screen-info.tsx"],"names":["useState","useEffect","React","ApiServiceImpl","isPartnerValid","partnerValidity","PartnerScreen","PartnerScreenInfo","id","dataPartner","setDataPartner","instance","getPartner","then","res","update","partner","partnerValidition","updatePartner","console","log","window","location","href"],"mappings":";;;;;;AAAA,SAAaA,QAAb,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,EAAkCC,eAAlC,QAA0E,0BAA1E;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,iBAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AAE/D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,cAAc,CAACQ,QAAf,CAAwBC,UAAxB,CAAmCJ,EAAnC,EAAuCK,IAAvC,CAA6CC,GAAD,IAAS;AACnDJ,MAAAA,cAAc,CAACI,GAAD,CAAd;AACD,KAFD;AAGD,GAJQ,EAIN,CAACN,EAAD,CAJM,CAAT;;AAQA,QAAMO,MAAM,GAAIC,OAAD,IAAsB;AACnC,UAAMC,iBAAkC,GAAIZ,eAAe,CAACW,OAAD,CAA3D;;AACA,QAAIZ,cAAc,CAACa,iBAAD,CAAlB,EAAuC;AACvCd,MAAAA,cAAc,CAACQ,QAAf,CAAwBO,aAAxB,CAAsCF,OAAtC,EAA+CH,IAA/C,CAAqDC,GAAD,IAAO;AACzDK,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAO,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD,OAHD;AAID;AACA,GARD;;AAUA,sBACE;AAAA,cACGd,WAAW,iBACV,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEA,WAAxB;AAAqC,MAAA,aAAa,EAAEM;AAApD;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAOD,CAhCM;;GAAMR,iB;;KAAAA,iB","sourcesContent":["import { FC, useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { ApiServiceImpl } from \"../../api/api-service\";\nimport { isPartnerValid, Partner, partnerValidity, PartnerValidity } from \"../../api/domain/partner\";\nimport { PartnerScreen } from \"../partner-screen\";\n\nexport const PartnerScreenInfo: FC<{ id: string }> = ({ id }) => {\n  \n  const [dataPartner, setDataPartner] = useState<Partner>();\n  \n\n\n\n  useEffect(() => {\n    ApiServiceImpl.instance.getPartner(id).then((res) => {\n      setDataPartner(res);\n    });\n  }, [id]);\n\n  \n\n  const update = (partner: Partner) => {\n    const partnerValidition: PartnerValidity  = partnerValidity(partner)\n    if (isPartnerValid(partnerValidition)) {\n    ApiServiceImpl.instance.updatePartner(partner).then((res)=>{\n      console.log(res)\n      window.location.href=\"/\";\n    })\n  }\n  }\n \n  return (\n    <>\n      {dataPartner && (\n        <PartnerScreen partner={dataPartner} partnerUpdate={update}></PartnerScreen>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}