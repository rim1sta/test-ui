{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rim1sta/Desktop/react-api-1/src/components/partner-screen-components/partner-type-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { PartnerType } from \"../../api/domain/partner-type.enum\";\nexport const PartnerTypeForm = ({\n  partnerType\n}) => {\n  _s();\n\n  const [partnerTypeState, setPartnerTypeState] = useState(partnerType);\n\n  const onPartnerTypeChange = event => {\n    const partnerType = event.target.value;\n    setPartnerTypeState(partnerType);\n    console.log(partnerType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0422\\u0438\\u043F \\u043F\\u0430\\u0440\\u0442\\u043D\\u0435\\u0440\\u0441\\u0442\\u0432\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: partnerType,\n            onChange: onPartnerTypeChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: PartnerType.legalEntity,\n              children: \"\\u042E\\u0440\\u0438\\u0434\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u043B\\u0438\\u0446\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: PartnerType.naturalPerson,\n              children: \"\\u0424\\u0438\\u0437\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u043B\\u0438\\u0446\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PartnerTypeForm, \"LAuA0v4jWjEME7dnCImWSlOKT/M=\");\n\n_c = PartnerTypeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnerTypeForm\");","map":{"version":3,"sources":["/Users/rim1sta/Desktop/react-api-1/src/components/partner-screen-components/partner-type-form.tsx"],"names":["React","useState","Form","PartnerType","PartnerTypeForm","partnerType","partnerTypeState","setPartnerTypeState","onPartnerTypeChange","event","target","value","console","log","legalEntity","naturalPerson"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAaC,QAAb,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AAOA,OAAO,MAAMC,eAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AAE9E,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAcI,WAAd,CAAxD;;AAIA,QAAMG,mBAAmB,GAAIC,KAAD,IAA0C;AACtE,UAAMJ,WAAW,GAAGI,KAAK,CAACC,MAAN,CAAaC,KAAjC;AACAJ,IAAAA,mBAAmB,CAACF,WAAD,CAAnB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACC,GAJD;;AAQE,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,4BAAtB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACA,YAAA,EAAE,EAAC,QADH;AAEA,YAAA,KAAK,EAAEA,WAFP;AAGA,YAAA,QAAQ,EAAEG,mBAHV;AAAA,oCAIE;AACA,cAAA,KAAK,EAAEL,WAAW,CAACW,WADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAQE;AACA,cAAA,KAAK,EAAEX,WAAW,CAACY,aADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD,CAtCM;;GAAMX,e;;KAAAA,e","sourcesContent":["import React from \"react\";\nimport { FC, useState, ChangeEvent } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { PartnerType } from \"../../api/domain/partner-type.enum\";\nimport { PartnersTable } from \"../partners-table\";\n\nexport interface PartnerTypeFormProps {\n  partnerType: PartnerType;\n}\n\nexport const PartnerTypeForm: FC<PartnerTypeFormProps> = ({ partnerType }) => {\n\nconst [partnerTypeState, setPartnerTypeState] = useState<PartnerType>(partnerType);\n\n\n\nconst onPartnerTypeChange = (event: ChangeEvent<HTMLInputElement>) => {\nconst partnerType = event.target.value as PartnerType\nsetPartnerTypeState(partnerType)\nconsole.log(partnerType)\n}\n\n\n\n  return (\n    <>\n      <Form>\n        <fieldset>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <h2>Тип партнерства</h2>\n            <Form.Control \n            as=\"select\" \n            value={partnerType} \n            onChange={onPartnerTypeChange}>\n              <option \n              value={PartnerType.legalEntity}>\n              Юридическое лицо\n              </option>\n              <option \n              value={PartnerType.naturalPerson}>\n              Физическое лицо\n              </option>\n            </Form.Control>\n          </Form.Group>\n        </fieldset>\n      </Form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}