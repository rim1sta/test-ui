{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rim1sta/Desktop/react-api-1/src/components/partner-edit/partner-edit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { ApiServiceImpl } from \"../../api/api-service\";\nimport { isPartnerValid, partnerValidity } from \"../../api/domain/partner\";\nimport { PartnerScreen } from \"../partner-forms/partner-screen\";\nexport const PartnerEdit = ({\n  id\n}) => {\n  _s();\n\n  const [dataPartner, setDataPartner] = useState();\n  const [validPartnerInfo, setValidPartnerInfo] = useState();\n  useEffect(() => {\n    ApiServiceImpl.instance.getPartner(id).then(res => {\n      setDataPartner(res);\n    });\n  }, [id]);\n\n  const update = partner => {\n    const partnerValidition = partnerValidity(partner);\n    setValidPartnerInfo(partnerValidition);\n\n    if (isPartnerValid(partnerValidition)) {\n      ApiServiceImpl.instance.updatePartner(partner).then(res => {\n        console.log(partner);\n        console.log(res);\n        window.location.href = \"/\";\n      });\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataPartner && /*#__PURE__*/_jsxDEV(PartnerScreen, {\n      partnerValidation: validPartnerInfo,\n      partner: dataPartner,\n      partnerUpdate: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PartnerEdit, \"5UiEpthbOEnTx2TZ291uU8mNJl0=\");\n\n_c = PartnerEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnerEdit\");","map":{"version":3,"sources":["/Users/rim1sta/Desktop/react-api-1/src/components/partner-edit/partner-edit.tsx"],"names":["useState","useEffect","React","ApiServiceImpl","isPartnerValid","partnerValidity","PartnerScreen","PartnerEdit","id","dataPartner","setDataPartner","validPartnerInfo","setValidPartnerInfo","instance","getPartner","then","res","update","partner","partnerValidition","updatePartner","console","log","window","location","href"],"mappings":";;;;;;AAAA,SAAaA,QAAb,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SACEC,cADF,EAGEC,eAHF,QAKO,0BALP;AAMA,SAASC,aAAT,QAA8B,iCAA9B;AAEA,OAAO,MAAMC,WAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AACzD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,EAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,cAAc,CAACU,QAAf,CAAwBC,UAAxB,CAAmCN,EAAnC,EAAuCO,IAAvC,CAA6CC,GAAD,IAAS;AACnDN,MAAAA,cAAc,CAACM,GAAD,CAAd;AACD,KAFD;AAGD,GAJQ,EAIN,CAACR,EAAD,CAJM,CAAT;;AAMA,QAAMS,MAAM,GAAIC,OAAD,IAAsB;AACnC,UAAMC,iBAAkC,GAAGd,eAAe,CAACa,OAAD,CAA1D;AACAN,IAAAA,mBAAmB,CAACO,iBAAD,CAAnB;;AACA,QAAIf,cAAc,CAACe,iBAAD,CAAlB,EAAuC;AACrChB,MAAAA,cAAc,CAACU,QAAf,CAAwBO,aAAxB,CAAsCF,OAAtC,EAA+CH,IAA/C,CAAqDC,GAAD,IAAS;AAC3DK,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAO,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,OAJD;AAKD;;AACD;AACD,GAXD;;AAaA,sBACE;AAAA,cACGhB,WAAW,iBACV,QAAC,aAAD;AACE,MAAA,iBAAiB,EAAEE,gBADrB;AAEE,MAAA,OAAO,EAAEF,WAFX;AAGE,MAAA,aAAa,EAAEQ;AAHjB;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAWD,CAlCM;;GAAMV,W;;KAAAA,W","sourcesContent":["import { FC, useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { ApiServiceImpl } from \"../../api/api-service\";\nimport {\n  isPartnerValid,\n  Partner,\n  partnerValidity,\n  PartnerValidity,\n} from \"../../api/domain/partner\";\nimport { PartnerScreen } from \"../partner-forms/partner-screen\";\n\nexport const PartnerEdit: FC<{ id: string }> = ({ id }) => {\n  const [dataPartner, setDataPartner] = useState<Partner>();\n  const [validPartnerInfo, setValidPartnerInfo] = useState<PartnerValidity>();\n\n  useEffect(() => {\n    ApiServiceImpl.instance.getPartner(id).then((res) => {\n      setDataPartner(res);\n    });\n  }, [id]);\n\n  const update = (partner: Partner) => {\n    const partnerValidition: PartnerValidity = partnerValidity(partner);\n    setValidPartnerInfo(partnerValidition);\n    if (isPartnerValid(partnerValidition)) {  \n      ApiServiceImpl.instance.updatePartner(partner).then((res) => {\n        console.log(partner)\n        console.log(res);\n        window.location.href = \"/\";\n      });\n    }\n    return;\n  };\n\n  return (\n    <>\n      {dataPartner && (\n        <PartnerScreen\n          partnerValidation={validPartnerInfo}\n          partner={dataPartner}\n          partnerUpdate={update}\n        ></PartnerScreen>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}