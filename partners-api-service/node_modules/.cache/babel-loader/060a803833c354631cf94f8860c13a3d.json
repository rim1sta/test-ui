{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rim1sta/Desktop/react-api-1/src/components/partner-edit/partner-edit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { ApiServiceImpl } from \"../../api/api-service\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openPartnerForEdit } from \"../../store/thunks/partner\";\nimport { isPartnerValid, partnerValidity } from \"../../api/domain/partner\";\nimport { PartnerScreen } from \"../partner-forms/partner-screen\";\nimport { getEditablePartner } from \"../../selectors/selectors\";\nexport const PartnerEdit = ({\n  id\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const dataPartner = useSelector(getEditablePartner);\n  const [validPartnerInfo, setValidPartnerInfo] = useState();\n  useEffect(() => {\n    dispatch(openPartnerForEdit(id));\n  }, [id]);\n\n  const update = partner => {\n    const partnerValidition = partnerValidity(partner);\n    setValidPartnerInfo(partnerValidition);\n\n    if (isPartnerValid(partnerValidition)) {\n      ApiServiceImpl.instance.updatePartner(partner).then(res => {\n        console.log(res);\n        window.location.href = \"/\";\n      });\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataPartner && /*#__PURE__*/_jsxDEV(PartnerScreen, {\n      partnerValidation: validPartnerInfo,\n      partner: dataPartner,\n      partnerUpdate: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PartnerEdit, \"hPvQl4cJa6GjTFAepuA2gN8TEjU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PartnerEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnerEdit\");","map":{"version":3,"sources":["/Users/rim1sta/Desktop/react-api-1/src/components/partner-edit/partner-edit.tsx"],"names":["useState","useEffect","React","ApiServiceImpl","useDispatch","useSelector","openPartnerForEdit","isPartnerValid","partnerValidity","PartnerScreen","getEditablePartner","PartnerEdit","id","dispatch","dataPartner","validPartnerInfo","setValidPartnerInfo","update","partner","partnerValidition","instance","updatePartner","then","res","console","log","window","location","href"],"mappings":";;;;;;AAAA,SAAaA,QAAb,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SACEC,cADF,EAGEC,eAHF,QAKO,0BALP;AAMA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AAEA,OAAO,MAAMC,WAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AACzD,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,WAAW,GAAGT,WAAW,CAACK,kBAAD,CAA/B;AAEA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,EAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,QAAQ,CAACP,kBAAkB,CAACM,EAAD,CAAnB,CAAR;AACA,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;;AAIA,QAAMK,MAAM,GAAIC,OAAD,IAAsB;AACnC,UAAMC,iBAAkC,GAAGX,eAAe,CAACU,OAAD,CAA1D;AACAF,IAAAA,mBAAmB,CAACG,iBAAD,CAAnB;;AACA,QAAIZ,cAAc,CAACY,iBAAD,CAAlB,EAAuC;AACrChB,MAAAA,cAAc,CAACiB,QAAf,CAAwBC,aAAxB,CAAsCH,OAAtC,EAA+CI,IAA/C,CAAqDC,GAAD,IAAS;AAC3DC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,OAHD;AAID;;AACD;AACD,GAVD;;AAYA,sBACE;AAAA,cACGd,WAAW,iBACV,QAAC,aAAD;AACE,MAAA,iBAAiB,EAAEC,gBADrB;AAEE,MAAA,OAAO,EAAED,WAFX;AAGE,MAAA,aAAa,EAAEG;AAHjB;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAWD,CAjCM;;GAAMN,W;UACMP,W,EACGC,W;;;KAFTM,W","sourcesContent":["import { FC, useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { ApiServiceImpl } from \"../../api/api-service\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { openPartnerForEdit } from \"../../store/thunks/partner\";\nimport {\n  isPartnerValid,\n  Partner,\n  partnerValidity,\n  PartnerValidity,\n} from \"../../api/domain/partner\";\nimport { PartnerScreen } from \"../partner-forms/partner-screen\";\nimport { getEditablePartner } from \"../../selectors/selectors\";\n\nexport const PartnerEdit: FC<{ id: string }> = ({ id }) => {\n  const dispatch = useDispatch();\n  const dataPartner = useSelector(getEditablePartner);\n  \n  const [validPartnerInfo, setValidPartnerInfo] = useState<PartnerValidity>();\n\n  useEffect(() => {\n   dispatch(openPartnerForEdit(id))\n  }, [id]);\n\n  const update = (partner: Partner) => {\n    const partnerValidition: PartnerValidity = partnerValidity(partner);\n    setValidPartnerInfo(partnerValidition);\n    if (isPartnerValid(partnerValidition)) {  \n      ApiServiceImpl.instance.updatePartner(partner).then((res) => {\n        console.log(res);\n        window.location.href = \"/\";\n      });\n    }\n    return;\n  };\n\n  return (\n    <>\n      {dataPartner && (\n        <PartnerScreen\n          partnerValidation={validPartnerInfo}\n          partner={dataPartner}\n          partnerUpdate={update}\n        ></PartnerScreen>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}