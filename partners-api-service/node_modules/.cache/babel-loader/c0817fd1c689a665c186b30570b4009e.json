{"ast":null,"code":"import { PartnerType } from './partner-type.enum';\nimport { companyInfoValidation, isCompanyInfoValid } from './company-info';\nimport { personalInfoValidation, isPersonalInfoValid } from './personal-info';\nimport { validateAddressInfo, isAddressInfoValid } from './address-info';\nimport { contactInfoValidation, isContactInfoValid } from './contact-info';\nexport const partnerValidity = partner => {\n  const result = {\n    addressInfo: validateAddressInfo(partner.addressInfo),\n    contactInfo: contactInfoValidation(partner.contactInfo),\n    personalInfo: partner.partnerType === PartnerType.naturalPerson ? personalInfoValidation(partner.personalInfo) : undefined,\n    companyInfo: partner.partnerType === PartnerType.legalEntity ? companyInfoValidation(partner.companyInfo) : undefined\n  };\n  return result;\n};\nexport const isPartnerValid = partner => !!isAddressInfoValid(partner.addressInfo) && !!isContactInfoValid(partner.contactInfo) && (!!partner.personalInfo && isPersonalInfoValid(partner.personalInfo) || !!partner.companyInfo && isCompanyInfoValid(partner.companyInfo));","map":{"version":3,"sources":["/Users/rim1sta/Desktop/react-api-1/src/api/domain/partner.ts"],"names":["PartnerType","companyInfoValidation","isCompanyInfoValid","personalInfoValidation","isPersonalInfoValid","validateAddressInfo","isAddressInfoValid","contactInfoValidation","isContactInfoValid","partnerValidity","partner","result","addressInfo","contactInfo","personalInfo","partnerType","naturalPerson","undefined","companyInfo","legalEntity","isPartnerValid"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAA6CC,qBAA7C,EAAoEC,kBAApE,QAA8F,gBAA9F;AACA,SAA+CC,sBAA/C,EAAuEC,mBAAvE,QAAkG,iBAAlG;AACA,SAA2CC,mBAA3C,EAAgEC,kBAAhE,QAA0F,gBAA1F;AACA,SAA6CC,qBAA7C,EAAoEC,kBAApE,QAA8F,gBAA9F;AAmBA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAAsB;AACjD,QAAMC,MAAuB,GAAG;AAC5BC,IAAAA,WAAW,EAAEP,mBAAmB,CAACK,OAAO,CAACE,WAAT,CADJ;AAE5BC,IAAAA,WAAW,EAAEN,qBAAqB,CAACG,OAAO,CAACG,WAAT,CAFN;AAG5BC,IAAAA,YAAY,EAAEJ,OAAO,CAACK,WAAR,KAAwBf,WAAW,CAACgB,aAApC,GAAoDb,sBAAsB,CAACO,OAAO,CAACI,YAAT,CAA1E,GAAoGG,SAHtF;AAI5BC,IAAAA,WAAW,EAAER,OAAO,CAACK,WAAR,KAAwBf,WAAW,CAACmB,WAApC,GAAmDlB,qBAAqB,CAACS,OAAO,CAACQ,WAAT,CAAxE,GAAiGD;AAJlF,GAAhC;AAMA,SAAON,MAAP;AACH,CARM;AAUP,OAAO,MAAMS,cAAc,GAAIV,OAAD,IAA+B,CAAC,CAACJ,kBAAkB,CAACI,OAAO,CAACE,WAAT,CAApB,IAC1D,CAAC,CAACJ,kBAAkB,CAACE,OAAO,CAACG,WAAT,CADsC,KAEzD,CAAC,CAACH,OAAO,CAACI,YAAV,IAA0BV,mBAAmB,CAACM,OAAO,CAACI,YAAT,CAA7C,IAAuE,CAAC,CAACJ,OAAO,CAACQ,WAAV,IAAyBhB,kBAAkB,CAACQ,OAAO,CAACQ,WAAT,CAFzD,CAAtD","sourcesContent":["import { PartnerType } from './partner-type.enum';\nimport { CompanyInfo, CompanyInfoValidation, companyInfoValidation, isCompanyInfoValid } from './company-info';\nimport { PersonalInfo, PersonalInfoValidation, personalInfoValidation, isPersonalInfoValid } from './personal-info';\nimport { AddressInfo, AddressInfoValidity, validateAddressInfo, isAddressInfoValid } from './address-info';\nimport { ContactInfo, ContactInfoValidation, contactInfoValidation, isContactInfoValid } from './contact-info';\n\nexport interface Partner {\n    id: string;\n    addressInfo: AddressInfo;\n    contactInfo: ContactInfo;\n    personalInfo?: PersonalInfo;\n    companyInfo?: CompanyInfo;\n}\n\n\nexport interface PartnerValidity {\n    addressInfo: AddressInfoValidity\n    contactInfo: ContactInfoValidation\n    personalInfo?: PersonalInfoValidation\n    companyInfo?: CompanyInfoValidation\n}\n\n\nexport const partnerValidity = (partner: Partner) => {\n    const result: PartnerValidity = {\n        addressInfo: validateAddressInfo(partner.addressInfo),\n        contactInfo: contactInfoValidation(partner.contactInfo),\n        personalInfo: partner.partnerType === PartnerType.naturalPerson ? personalInfoValidation(partner.personalInfo!) : undefined,\n        companyInfo: partner.partnerType === PartnerType.legalEntity ?  companyInfoValidation(partner.companyInfo!) : undefined,\n    };\n    return result;\n}\n\nexport const isPartnerValid = (partner: PartnerValidity) =>  !!isAddressInfoValid(partner.addressInfo) \n&& !!isContactInfoValid(partner.contactInfo) \n&& (!!partner.personalInfo && isPersonalInfoValid(partner.personalInfo) || !!partner.companyInfo && isCompanyInfoValid(partner.companyInfo))"]},"metadata":{},"sourceType":"module"}